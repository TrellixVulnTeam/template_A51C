{"version":3,"sources":["webpack://gatsby-starter-default/./src/components/Ui/Responsive/Responsive.jsx","webpack://gatsby-starter-default/./src/components/Pages/ProductCard/ProductCardMain/ProductCardMain.jsx","webpack://gatsby-starter-default/./src/db/productData.js","webpack://gatsby-starter-default/./src/pages/product-card.js"],"names":["className","productData","slides","useStaticQuery","source","nodes","slider","React","ref","centerMode","arrows","dots","infinite","slidesToShow","slidesToScroll","draggable","swipeToSlide","speed","cssEase","responsive","breakpoint","settings","map","item","index","image","getImage","childImageSharp","key","G","alt","main","main_images","main_info","code","title_ua","title_ru","title_en","modification","size","price","console","log","title"],"mappings":"oNAqBA,EAnBmB,WACjB,OACE,2BAASA,UAAU,cACjB,uBAAKA,UAAU,gBACb,uBAAKA,UAAU,mBACb,sBAAIA,UAAU,yCAAd,gBAGA,sBAAIA,UAAU,wCAAd,OACA,sBAAIA,UAAU,uCAAd,MACA,sBAAIA,UAAU,uCAAd,MACA,sBAAIA,UAAU,uCAAd,MACA,sBAAIA,UAAU,uCAAd,U,8BC+EV,EArFwB,SAAC,GAAoB,EAAlBC,YAAmB,IActCC,GAbiBC,oBAAe,aAaRC,OAAOC,MA4B/BC,EAASC,SAAa,MAE5B,EAA0BA,WAAe,GAAzC,UAEA,OACE,gCACE,2BAASP,UAAU,4BACjB,uBAAKA,UAAU,gBACb,uBAAKA,UAAU,2BACb,uBAAKA,UAAU,mCACb,gBAAC,IAAD,eAAQQ,IAAKF,GApCR,CACfG,YAAY,EACZC,QAAQ,EACRC,MAAM,EACNC,UAAU,EACVC,aAAc,EACdC,eAAgB,EAChBC,WAAW,EACXC,cAAc,EACdC,MAAO,IACPC,QAAS,gCACTC,WAAY,CACV,CACEC,WAAY,IACZC,SAAU,WAEZ,CACED,WAAY,IACZC,SAAU,CACRZ,YAAY,EACZI,aAAc,EACdC,eAAgB,MAeZ,CAAmCd,UAAU,4BAC1CE,EAAOoB,KAAI,SAACC,EAAMC,GACjB,IAAMC,GAAQC,OAASH,EAAKI,iBAC5B,OACE,uBAAK3B,UAAU,8BAA8B4B,IAAKJ,GAChD,uBAAKxB,UAAU,uBACb,wBAAMA,UAAU,sCACd,gBAAC,EAAA6B,EAAD,CACE7B,UAAU,4BACVyB,MAAOA,EACPK,IAAI,2CCtEnB7B,EAAa,CACxB8B,KAAK,CACHC,YAAY,CACV,MACA,OAEFC,UAAU,CACRC,KAAM,WACNC,SAAU,kCACVC,SAAU,+BACVC,SAAU,4BACVC,aAAa,CACX,CACEC,KAAM,kBAAmBC,MAAO,QAElC,CACED,KAAM,kBAAmBC,MAAO,QAElC,CACED,KAAM,kBAAmBC,MAAO,aCC1C,EAXoB,WAElB,OADAC,QAAQC,IAAIzC,GAEV,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAK0C,MAAO,iBACZ,gBAAC,EAAD,CAAiB1C,YAAaA,EAAY8B,OAC1C,gBAAC,EAAD","file":"component---src-pages-product-card-js-a96de11eae3c3454804c.js","sourcesContent":["import React from 'react';\n\nconst Responsive = () => {\n  return (\n    <section className=\"responsive\">\n      <div className=\"page-wrapper\">\n        <div className=\"responsive-grid\">\n          <h2 className=\"responsive-item responsive-item__xxxl\">\n            Шире чем XXL\n          </h2>\n          <h2 className=\"responsive-item responsive-item__xxl\">XXL</h2>\n          <h2 className=\"responsive-item responsive-item__xl\">XL</h2>\n          <h2 className=\"responsive-item responsive-item__lg\">LG</h2>\n          <h2 className=\"responsive-item responsive-item__md\">MD</h2>\n          <h2 className=\"responsive-item responsive-item__sm\">SM</h2>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Responsive;\n","import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage, getImage } from 'gatsby-plugin-image';\nimport Slider from 'react-slick';\nimport 'slick-carousel/slick/slick.scss';\nimport PropTypes from 'prop-types';\n// import ProductCardOrder from './ProductCardOrder/ProductCardOrder';\n\nconst ProductCardMain = ({ productData }) => {\n  const productgallery = useStaticQuery(graphql`\n    query allProductQuery {\n      source: allFile(filter: { absolutePath: { regex: \"/product_card/\" } }) {\n        nodes {\n          childImageSharp {\n            gatsbyImageData(placeholder: BLURRED, formats: [AUTO, WEBP, AVIF], layout: FULL_WIDTH)\n          }\n        }\n      }\n    }\n  `);\n\n  \n  const slides = productgallery.source.nodes;\n\n  const settings = {\n    centerMode: true,\n    arrows: false,\n    dots: false,\n    infinite: true,\n    slidesToShow: 3,\n    slidesToScroll: 1,\n    draggable: false,\n    swipeToSlide: true,\n    speed: 750,\n    cssEase: 'cubic-bezier(0.24, 0.4, 0, 1)',\n    responsive: [\n      {\n        breakpoint: 10000,\n        settings: 'unslick',\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          centerMode: false,\n          slidesToShow: 1,\n          slidesToScroll: 1,\n        },\n      },\n    ],\n  };\n  const slider = React.useRef(null);\n\n  const [count, setCount] = React.useState(1);\n\n  return (\n    <>\n      <section className=\"product-main top-section\">\n        <div className=\"page-wrapper\">\n          <div className=\"product-main__container\">\n            <div className=\"product-gallery__slider-wrapper\">\n              <Slider ref={slider} {...settings} className=\"product-gallery__slider\">\n                {slides.map((item, index) => {\n                  const image = getImage(item.childImageSharp);\n                  return (\n                    <div className=\"product-slide__item-wrapper\" key={index}>\n                      <div className=\"product-slide__item\">\n                        <span className=\"product-slide__item-image--wrapper\">\n                          <GatsbyImage\n                            className=\"product-slide__item-image\"\n                            image={image}\n                            alt=\"chair Ricchezza furniture\"\n                          />\n                        </span>\n                        \n                      </div>\n                    </div>\n                  );\n                })}\n              </Slider>\n            </div>\n            {/* <ProductCardOrder productData={productData} /> */}\n          </div>\n        </div>\n      </section>\n      {/* <div className=\"form-popap\"></div> */}\n    </>\n  );\n};\n\nProductCardMain.propTypes = {\n  productData: PropTypes.object,\n};\n\nexport default ProductCardMain;\n","export const productData= {\n  main:{\n    main_images:[\n      \"img\",\n      \"img\",\n    ],\n    main_info:{\n      code: \"R-008256\",\n      title_ua: \"Дерев’яний стілець Country sigh\",\n      title_ru: \"Деревянный стул Country sigh\",\n      title_en: \"Country sigh wooden chair\",\n      modification:[\n        {\n          size: \"600 × 600 × 900\", price: \"8000\",\n        },\n        {\n          size: \"680 × 660 × 900\", price: \"9000\",\n        },\n        {\n          size: \"700 × 800 × 900\", price: \"10000\",\n        },\n      ],\n    },\n  },\n}","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../components/Layout/layout';\nimport Seo from '../components/seo';\nimport '../styles/styles.sass';\nimport Responsive from '../components/Ui/Responsive/Responsive';\nimport ProductCardMain from '../components/Pages/ProductCard/ProductCardMain/ProductCardMain';\nimport { productData } from '../db/productData';\n\nconst ProductPage = () => {\n  console.log(productData);\n  return (\n    <Layout>\n      <Seo title={'product-card'} />\n      <ProductCardMain productData={productData.main} />\n      <Responsive />\n    </Layout>\n  );\n};\n\nexport default ProductPage;\n\nexport const query = graphql`\n  query($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n"],"sourceRoot":""}